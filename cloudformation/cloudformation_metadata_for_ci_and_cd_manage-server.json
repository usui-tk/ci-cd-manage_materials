{
  "AWSTemplateFormatVersion" : "2010-09-09",
  "Description" : "CI and CD Management Server.",
  "Parameters" : {
    "KeyName": {
      "Description" : "Name of an existing EC2 KeyPair",
      "Type" : "String",
      "MinLength": "1",
      "MaxLength": "64",
      "AllowedPattern" : "[-_ a-zA-Z0-9]*",
      "ConstraintDescription" : "can contain only alphanumeric characters, spaces, dashes and underscores."
    },
    "InstanceType" : {
      "Description": "EC2 instance type for RHEL",
      "Default"    : "i2.xlarge",
      "Type"       : "String",
      "AllowedValues" : [ "m3.xlarge", "m3.2xlarge", "i2.xlarge", "i2.2xlarge", "i2.4xlarge", "c3.xlarge", "c3.2xlarge", "c3.4xlarge" ]
    }
  },
  "Mappings" : {
    "RegionMap" : {
      "us-east-1"      : { "AMI" : "ami-63b6910a" },
      "us-west-1"      : { "AMI" : "ami-3425be04" },
      "us-west-2"      : { "AMI" : "ami-e04b7aa5" },
      "sa-east-1"      : { "AMI" : "ami-e31cbafe" },
      "eu-west-1"      : { "AMI" : "ami-2ce30f5b" },
      "ap-southeast-1" : { "AMI" : "ami-5a1c4808" },
      "ap-southeast-2" : { "AMI" : "ami-c7db44fd" },
      "ap-northeast-1" : { "AMI" : "ami-111f7910" }
    },
    "AZ" : {
      "us-east-1":      { "primary": "us-east-1b",      "secondary": "us-east-1c" },
      "us-west-1":      { "primary": "us-west-1a",      "secondary": "us-west-1b" },
      "us-west-2":      { "primary": "us-west-2a",      "secondary": "us-west-2b" },
      "sa-east-1":      { "primary": "sa-east-1a",      "secondary": "sa-east-1b" },
      "eu-west-1":      { "primary": "eu-west-1a",      "secondary": "eu-west-1b" },
      "ap-southeast-1": { "primary": "ap-southeast-1a", "secondary": "ap-southeast-1b" },
      "ap-southeast-2": { "primary": "ap-southeast-2a", "secondary": "ap-southeast-2b" },
      "ap-northeast-1": { "primary": "ap-northeast-1a", "secondary": "ap-northeast-1c" }
    },
    "StackConfig" : {
      "VPC"           : { "CIDR" : "10.0.0.0/16" },
      "PublicSubnet"  : { "CIDR" : "10.0.0.0/24" }
    }
  },
  "Resources" : {
    "VPC" : {
      "Type" : "AWS::EC2::VPC",
      "Properties" : {
        "CidrBlock" : { "Fn::FindInMap" : [ "StackConfig", "VPC", "CIDR" ]},
        "EnableDnsSupport": "true",
        "EnableDnsHostnames": "true",
        "InstanceTenancy" : "default",
        "Tags" : [
          {"Key" : "Application", "Value" : {"Ref" : "AWS::StackId"} },
          {"Key" : "Network", "Value" : "Public" }
        ]
      }
    },
    "InternetGateway" : {
      "Type" : "AWS::EC2::InternetGateway",
      "Properties" : {
        "Tags" : [
          {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"} },
          {"Key" : "Network", "Value" : "Public" }
        ]
      }
    },
    "AttachGateway" : {
      "Type" : "AWS::EC2::VPCGatewayAttachment",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "InternetGatewayId" : { "Ref" : "InternetGateway" }
      }
    },
    "PublicRouteTable" : {
      "Type" : "AWS::EC2::RouteTable",
      "DependsOn" : "AttachGateway",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "Tags" : [
          {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"} },
          {"Key" : "Network", "Value" : "Public" }
        ]
      }
    },
    "PublicRoute" : {
      "Type" : "AWS::EC2::Route",
      "DependsOn" : "AttachGateway",
      "Properties" : {
        "RouteTableId" : { "Ref" : "PublicRouteTable" },
        "DestinationCidrBlock" : "0.0.0.0/0",
        "GatewayId" : { "Ref" : "InternetGateway" }
      }
    },
    "PublicSubnet": {
      "Type": "AWS::EC2::Subnet",
      "DependsOn" : "AttachGateway",
      "Properties": {
        "VpcId": { "Ref": "VPC" },
        "AvailabilityZone": { "Fn::FindInMap": [ "AZ", { "Ref": "AWS::Region" }, "primary" ]},
        "CidrBlock": { "Fn::FindInMap" : [ "StackConfig", "PublicSubnet", "CIDR" ]}
      }
    },
    "PublicSubnetRouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "PublicSubnet" },
        "RouteTableId" : { "Ref" : "PublicRouteTable" }
      }
    },
    "SSHSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "GroupDescription" : "Enable SSH access via port 22",
        "SecurityGroupIngress" : [
          { "IpProtocol" : "tcp", "FromPort" : "22",  "ToPort" : "22",  "CidrIp" : "0.0.0.0/0" }
        ]
      }
    },
    "WebSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "GroupDescription" : "Enable Web Server access via port 80",
        "SecurityGroupIngress" : [
          { "IpProtocol" : "tcp", "FromPort" : "80",  "ToPort" : "80",  "CidrIp" : "0.0.0.0/0" }
        ]
      }
    },
    "IRCSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "GroupDescription" : "Enable IRC Server access via port 6667.6668.6669",
        "SecurityGroupIngress" : [
          { "IpProtocol" : "tcp", "FromPort" : "6667",  "ToPort" : "6667",  "CidrIp" : "0.0.0.0/0" },
          { "IpProtocol" : "tcp", "FromPort" : "6668",  "ToPort" : "6668",  "CidrIp" : "0.0.0.0/0" },
          { "IpProtocol" : "tcp", "FromPort" : "6669",  "ToPort" : "6669",  "CidrIp" : "0.0.0.0/0" }
        ]
      }
    },
    "ManagementServerEIP" : {
      "Type" : "AWS::EC2::EIP",  
      "Properties" : {
        "InstanceId": { "Ref" : "ManagementServer" }
      }
    },
    "ManagementServer" : {
      "Type" : "AWS::EC2::Instance",  
      "Properties" : {
        "ImageId" : { "Fn::FindInMap" : [ "RegionMap", { "Ref" : "AWS::Region" }, "AMI" ] },
        "InstanceType" : { "Ref" : "InstanceType"},
        "SubnetId" : { "Ref" : "PublicSubnet" },
        "SecurityGroupIds" : [
          {"Ref" : "SSHSecurityGroup"},
          {"Ref" : "WebSecurityGroup"},
          {"Ref" : "IRCSecurityGroup"}
        ],
        "EbsOptimized" : "true",
        "BlockDeviceMappings" : [
          { "DeviceName" : "/dev/sda1", 
            "Ebs":{
              "VolumeSize":"256",
              "VolumeType":"io1",
              "Iops":"4000",
              "DeleteOnTermination":"true"
            }
          }
        ],
        "KeyName" : { "Ref" : "KeyName" },
        "Tags" : [
          {"Key" : "Name", "Value" : "CI and CD Management Server" }
        ],
        "Monitoring" : "true",
        "UserData" : { "Fn::Base64" : { "Fn::Join" : ["", [
          "#! /bin/bash -v\n",
          "LOGFILE=/tmp/cloud-init_script.log\n",

          "# cloud-init for RHEL Customize\n",

          "echo \"cloud-init Execute START `date`\" >> ${LOGFILE}\n",

          "echo \"cloud-init RHEL yum update Start `date`\" >> ${LOGFILE}\n",
          "yum update -y rh-amazon-rhui-client >> ${LOGFILE}\n",
          "yum-config-manager --enable rhui-REGION-rhel-server-supplementary  >> ${LOGFILE}\n",
          "yum install -y yum-plugin-fastestmirror yum-plugin-changelog yum-plugin-priorities yum-plugin-versionlock yum-utils >> ${LOGFILE}\n",
          "yum clean all >> ${LOGFILE}\n",
          "yum install -y git >> ${LOGFILE}\n",
          "yum update -y >> ${LOGFILE}\n",
          "echo \"cloud-init RHEL yum update Complete `date`\" >> ${LOGFILE}\n",

          "echo \"cloud-init Custom yum update Start `date`\" >> ${LOGFILE}\n",
          "yum clean all >> ${LOGFILE}\n",
          "yum localinstall -y http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm >> ${LOGFILE}\n",
          "yum clean all >> ${LOGFILE}\n",
          "yum localinstall -y https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-latest.amzn1.noarch.rpm >> ${LOGFILE}\n",
          "yum clean all >> ${LOGFILE}\n",
          "yum localinstall -y https://opscode-omnibus-packages.s3.amazonaws.com/el/6/x86_64/chef-11.10.4-1.el6.x86_64.rpm >> ${LOGFILE}\n",
          "yum clean all >> ${LOGFILE}\n",
          "yum update -y >> ${LOGFILE}\n",
          "echo \"cloud-init Custom yum update Complete `date`\" >> ${LOGFILE}\n",

          "echo \"cloud-init RHEL SSH Deamon Trouble Fix for RHEL v6.4-AMI Start `date`\" >> ${LOGFILE}\n",
          "sed -i '/^cat/d' /etc/rc.d/rc.local\n",
          "sed -i '/^UseDNS/d' /etc/rc.d/rc.local\n",
          "sed -i '/^PermitRootLogin/d' /etc/rc.d/rc.local\n",
          "sed -i '/^PermitRootLogin without-password/d' /etc/ssh/sshd_config\n",
          "/usr/sbin/sshd -t >> ${LOGFILE}\n",
          "/sbin/service sshd restart >> ${LOGFILE}\n",
          "echo \"cloud-init RHEL SSH Deamon Trouble Fix for RHEL v6.4-AMI Complete `date`\" >> ${LOGFILE}\n",

          "echo \"cloud-init RHEL TimeZone Setting Start `date`\" >> ${LOGFILE}\n",
          "date >> ${LOGFILE}\n",
          "/bin/cp -fp /usr/share/zoneinfo/Asia/Tokyo /etc/localtime\n",
          "date >> ${LOGFILE}\n",
          "/usr/sbin/ntpdate 0.rhel.pool.ntp.org >> ${LOGFILE}\n",
          "/sbin/chkconfig ntpd on >> ${LOGFILE}\n",
          "/sbin/service ntpd start >> ${LOGFILE}\n",
          "sleep 5\n",
          "/usr/sbin/ntpq -p >> ${LOGFILE}\n",
          "date >> ${LOGFILE}\n",
          "echo \"cloud-init RHEL TimeZone Setting Complete `date`\" >> ${LOGFILE}\n",

          "echo \"cloud-init RHEL Disabled IPv6 Function Start `date`\" >> ${LOGFILE}\n",
          "echo \"# Custom sysctl Parameter for ipv6 disable\" >> /etc/sysctl.conf\n",
          "echo \"net.ipv6.conf.all.disable_ipv6 = 1\" >> /etc/sysctl.conf\n",
          "echo \"net.ipv6.conf.default.disable_ipv6 = 1\" >> /etc/sysctl.conf\n",
          "/sbin/sysctl -p\n",
          "/sbin/sysctl -a >> ${LOGFILE}\n",
          "echo \"options ipv6 disable=1\" >> /etc/modprobe.d/ipv6.conf\n",
          "echo \"cloud-init RHEL Disabled IPv6 Function Complete `date`\" >> ${LOGFILE}\n",

          "echo \"cloud-init Execute Complete `date`\" >> ${LOGFILE}\n",

          "echo \"cfn-init Execute Start `date`\" >> ${LOGFILE}\n",
          
          "# Helper function\n",
          "function error_exit\n",
          "{\n",
          "  /opt/aws/bin/cfn-signal --exit-code 1 --reason \"$1\" '", { "Ref" : "ServerWaitHandle" }, "'\n",
          "  exit 1\n",
          "}\n",

          "# CloudFormation Stack Create\n",
          "/opt/aws/bin/cfn-init --verbose --stack ", { "Ref" : "AWS::StackId" },
          "                      --resource ManagementServer",
          "                      --configsets full_install",
          "                      --region ", { "Ref" : "AWS::Region" }, " >> ${LOGFILE} || error_exit 'Failed to run cfn-init'\n",

          "echo \"cfn-init Execute Complete `date`\" >> ${LOGFILE}\n",
          
          "# EC2-EBS Resize for Root Volume\n",
          "echo \"cloud-init Root Disk Partition Resize Start `date`\" >> ${LOGFILE}\n",
          "/sbin/fdisk -l >>  ${LOGFILE}\n",
          "/sbin/fdisk /dev/xvda << __EOF__ >> ${LOGFILE}\n",
          "p\n",
          "d\n",
          "p\n",
          "n\n",
          "p\n",
          "1\n",
          "16\n",
          "\n",
          "w\n",
          "__EOF__\n",
          "/sbin/fdisk -l >>  ${LOGFILE}\n",
          "echo \"cloud-init Root Disk Partition Resize Complete `date`\" >> ${LOGFILE}\n",

          "echo \"cloud-init Swap File Create Start `date`\" >> ${LOGFILE}\n",
          "# Prevent the default behavior of the cloud-init\n",
          "sed -i 's@/dev/xvdb@#/dev/xvdb@g' /etc/fstab\n",
          "# Make Swap File\n",
          "/sbin/swapon -s >>  ${LOGFILE}\n",
          "/usr/bin/free >>  ${LOGFILE}\n",
          "/usr/bin/time dd if=/dev/zero of=/mnt/swap bs=1M count=1024 >>  ${LOGFILE}\n",
          "/sbin/mkswap /mnt/swap >>  ${LOGFILE}\n",
          "/sbin/swapon /mnt/swap >>  ${LOGFILE}\n",
          "/sbin/swapon -s >>  ${LOGFILE}\n",
          "/usr/bin/free >>  ${LOGFILE}\n",
          "cat /etc/fstab >>  ${LOGFILE}\n",
          "echo \"/mnt/swap  swap      swap    defaults        0 0\" >> /etc/fstab\n",
          "cat /etc/fstab >>  ${LOGFILE}\n",
          "echo \"cloud-init Swap File Create Complete `date`\" >> ${LOGFILE}\n",
          
          "echo \"cloud-init Last yum update Start `date`\" >> ${LOGFILE}\n",
          "yum clean all >> ${LOGFILE}\n",
          "yum update -y >> ${LOGFILE}\n",
          "echo \"cloud-init Last yum update Complete `date`\" >> ${LOGFILE}\n",
          
          "# EC2 Instance Restart\n",
          "/sbin/reboot >> ${LOGFILE}\n"
        ]]}}
      },
      "Metadata" : {
        "AWS::CloudFormation::Init" : {

          "configSets" : { "full_install" : [ "preset_shellscript", "2nd-bootstrap_settings" ] },

          "preset_shellscript" : {
            "commands" : {
              "01_mkdir_github_repository" : {
                "command" : "mkdir -p /tmp/github"
              },
              "02_git_clone" : {
                "command" : "git clone https://github.com/usui-tk/ci-cd-manage_materials.git /tmp/github"
              },
              "03_change-permission" : {
                "command" : "chmod 777 /tmp/github/shellscript/ci_and_cd_manage-server.sh"
              }
            }
          },

          "2nd-bootstrap_settings" : {
            "commands" : {
              "00_waiting_time" : {
                "command" : "echo \"/bin/sleep 30\" >> /etc/rc.d/rc.local"
              },
              "01_settings_shellscript_execute" : {
                "command" : "echo \"/bin/bash -ex /tmp/github/shellscript/ci_and_cd_manage-server.sh\" >> /etc/rc.d/rc.local"
              },
              "02_settings_cfn-signal_result" : {
                "command" : { "Fn::Join" : ["", ["echo \"/opt/aws/bin/cfn-signal --exit-code \"'$?'\" --reason shellscript_execute '", { "Ref" : "ServerWaitHandle" }, "' \"  >> /etc/rc.d/rc.local"]]}
              },
              "03_unsettings_sleep" : {
                "command" : "echo \"/bin/sed -i 's@/bin/sleep@#/bin/sleep@g' /etc/rc.d/rc.local\" >> /etc/rc.d/rc.local"
              },
              "04_unsettings_chef-solo" : {
                "command" : "echo \"/bin/sed -i 's@/usr/bin/chef-solo@#/usr/bin/chef-solo@g' /etc/rc.d/rc.local\" >> /etc/rc.d/rc.local"
              },
              "05_unsettings_cfn-signal" : {
                "command" : "echo \"/bin/sed -i 's@/opt/aws/bin/cfn-signal@#/opt/aws/bin/cfn-signal@g' /etc/rc.d/rc.local\" >> /etc/rc.d/rc.local"
              },
              "06_unsettings_bash" : {
                "command" : "echo \"/bin/sed -i 's@/bin/bash@#/bin/bash@g' /etc/rc.d/rc.local\" >> /etc/rc.d/rc.local"
              },
              "07_unsettings_sed" : {
                "command" : "echo \"/bin/sed -i 's@/bin/sed@#/bin/sed@g' /etc/rc.d/rc.local\" >> /etc/rc.d/rc.local"
              }
            }
          }
        }
      }
    },

    "ServerWaitHandle" : {
      "Type" : "AWS::CloudFormation::WaitConditionHandle",
      "Properties" : {}
    },

    "ServerWaitCondition" : {
      "Type" : "AWS::CloudFormation::WaitCondition",
      "DependsOn" : "ManagementServer",
      "Properties" : {
        "Handle" : {"Ref" : "ServerWaitHandle"},
        "Timeout" : "43000"
      }
    }
  },

  "Outputs": {
    "EndpointURL": {
      "Description": "URL of the CI and CD Management Server",
      "Value":  { "Fn::Join": [ "", [ "http://", { "Fn::GetAtt": ["ManagementServer", "PublicIp"]} ]]}
    },
    "RedmineURL": {
      "Description": "URL of Redmine Service",
      "Value":  { "Fn::Join": [ "", [ "http://", { "Fn::GetAtt": ["ManagementServer", "PublicIp"]}, "/redmine" ]]}
    },
    "JenkinsURL": {
      "Description": "URL of Jenkins Service",
      "Value":  { "Fn::Join": [ "", [ "http://", { "Fn::GetAtt": ["ManagementServer", "PublicIp"]}, "/jenkins" ]]}
    },
    "SubversionURL": {
      "Description": "URL of Subversion Service",
      "Value":  { "Fn::Join": [ "", [ "http://", { "Fn::GetAtt": ["ManagementServer", "PublicIp"]}, "/subversion" ]]}
    }
  }
}



